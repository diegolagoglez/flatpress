#!/bin/bash

source bin/flatpress-common

DEEP=-1
EXTENSION=".md"
HTML_EXTENSION=".html"
OPT_BASE=
BASE_PATH_REMOVAL_REGEX=
OPT_BASE_URL=
ONLY_IF_FILE=
DOCTITLE_TOOL="bin/doctitle"

function replace_extension() {
	sed -r "s/${EXTENSION}$/${HTML_EXTENSION}/" <<< $1
}

function check_options() {
	if [ -z "$OPT_BASE" ]; then
		error "A base directory must be specified with -b option." 2
	fi
	if [ ! -f "$DOCTITLE_TOOL" ]; then
		error "Invalid doctitle tool: $DOCTITLE_TOOL" 4
	fi
}

function usage() {
	echo "$(basename $0) - Utility to print directory tree as Markdown (FlatPress tool)."
	echo "Usage: $(basename $0) [options]"
	echo "Options:"
	echo "  -b <dir> : Set base dir."
	echo "  -u <url> : Set base URL to prepend."
	echo "  -f       : Generate only if there is a Markdown file with the same name."
	echo "  -d <tool>: Sets doctitle tool (default to $DOCTITLE_TOOL)."
}

function dir_tree() {
	DEEP=$(($DEEP+1))
	base="$1"
	find $base -mindepth 1 -maxdepth 1 | sort | while read; do
		#echo "$REPLY"
		if [ -d "$REPLY" ]; then
			if [ ! -z "$ONLY_IF_FILE" ]; then
				file="$REPLY$EXTENSION"
				if [ -f "$file" ]; then
					echo "$(repeat '\t' $DEEP)* [$($DOCTITLE_TOOL $file)]($(sed -re $BASE_PATH_REMOVAL_REGEX <<< $REPLY)$HTML_EXTENSION)"
				fi
			else
				echo "$(repeat '\t' $DEEP)* [$(basename $REPLY)]($(sed -re $BASE_PATH_REMOVAL_REGEX <<< $REPLY))"
			fi
			dir_tree $REPLY
		elif [[ -f "$REPLY" && ( -z "$ONLY_IF_FILE" || ! -d "$(remove_extension $REPLY)" ) ]]; then
			echo "$(repeat '\t' $DEEP)* [$($DOCTITLE_TOOL $REPLY)]($(sed -re $BASE_PATH_REMOVAL_REGEX <<< $(replace_extension $REPLY)))"
		fi
	done
	DEEP=$(($DEEP-1))
}

function main() {
	if [ $# == 0 ]; then
		usage
		exit 1
	fi
	while getopts ":b:u:fd" opt; do
		case "$opt" in
			b)
				OPT_BASE=$OPTARG
				BASE_PATH_REMOVAL_REGEX="s/$(escape_path $OPT_BASE)//"
			;;
			u)
				OPT_BASE_URL=$OPTARG
			;;
			f)
				ONLY_IF_FILE=yes
			;;
			d)
				DOCTITLE_TOOL="$OPTARG"
			;;
			\?)
				error "Invalid option: -$OPTARG" 1
			;;
			\:)
				error "ERROR: Option -$OPTARG requires an argument." 1
			;;
		esac
	done

	check_options
	
	dir_tree $OPT_BASE
}

main $@
